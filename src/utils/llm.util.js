const { askClaude } = require("../providers/claude/claude.provider");
const { prompt } = require("inquirer");
const { ApiProvider } = require("../providers/api-provider");
const { setEnvVar, getEnvVar } = require("./env.util");
const { ProgressUtil } = require("./progress.util");
const { getRandomWaitingJoke } = require("../providers/joke.provider");

/**
 * @function tryAskLLM
 * @param {string} type The type of prompt to send to AI (e.g. 'component' or 'worker')
 * @description Tries to ask AI with a prompt to generate code
 * @returns {string} The code generated by AI or undefined if the user chose not to use AI
 */
async function tryAskLLM(type = 'component') {
    // Prompt user if they want to give a description to claude
    let codeResult;
    let defaultProvider = await getEnvVar('DEFAULT_AI_PROVIDER');
    if (!defaultProvider) {
        defaultProvider = 'claude';
        await setEnvVar('DEFAULT_AI_PROVIDER', defaultProvider);
    }
    console.log('\n')
    const { codePrompt } = await prompt([
        {
            type: 'input',
            name: 'codePrompt',
            message: `Prompt for generating code w/${defaultProvider}? (ignore and press ENTER to not use AI)\n`,
        },
    ]);
    if (codePrompt) {
        const key = await ApiProvider.getApiKey(defaultProvider);
        if (!key) {
            console.log(`\n\nNo API key found for ${defaultProvider}.\n\n`);
            return;
        };
        console.log('\n')
        const progress = new ProgressUtil();

        try {
            const loadingJoke = getRandomWaitingJoke(defaultProvider);
            progress.start(loadingJoke);
            switch (defaultProvider) {
                case 'claude':
                default:
                    codeResult = await askClaude(codePrompt, type, key);
                    break;
            }
            progress.stop();
        } catch (error) {
            progress.stop();
            throw new Error(error.message);
        }

        console.log('\n');
        return codeResult;
    }
}

module.exports = { tryAskLLM };