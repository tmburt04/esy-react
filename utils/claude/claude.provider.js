const { prompt } = require("inquirer");
const ApiProvider = require("../api-util");
const { ClaudeModel } = require("./claude.model");
const { ProgressUtil } = require("../progress-util");
const { getRandomWaitingJoke } = require("../joke-util");

/**
 * @description Tries to ask Claude for a prompt to generate code
 * @returns {string} The code generated by Claude or undefined if the user chose not to use AI
 */
async function tryAskClaude() {
    // Prompt user if they want to give a description to claude
    let codeOverride;
    const { codePrompt } = await prompt([
        {
            type: 'input',
            name: 'codePrompt',
            message: 'Prompt for generating code w/Claude? (ignore and press ENTER to not use AI)\n\n', // @todo make model dynamic
        },
    ]);
    if (codePrompt) {
        // @todo make model dynamic
        const isSet = await ApiProvider.isApiKeySet();
        if (!isSet) {
            const { claudeApiKey } = await prompt([
                {
                    type: 'password',
                    name: 'claudeApiKey',
                    message: 'Claude API Key not set! Provide one below or ignore to create the component anyways.\n\n',
                },
            ]);
            if (claudeApiKey) {
                await ApiProvider.setApiKey(claudeApiKey);
            } else {
                console.log('Claude API Key not set. Generating component without AI');
                return;
            }
        }
        const key = await ApiProvider.getApiKey();
        codeOverride = await askClaude(codePrompt, key);
    }

    return codeOverride;
}
/**
 * 
 * @param prompt The prompt to send to the model 
 * @param apiKey The API key to use for the request
 * @returns 
 */
async function askClaude(prompt, apiKey) {
    if (!apiKey) {
        throw new Error('API key is required');
    }
    const progress = new ProgressUtil();
    const loadingJoke = getRandomWaitingJoke('Claude');
    progress.start(loadingJoke);
    const model = ClaudeModel

    try {
        const response = await fetch('https://api.anthropic.com/v1/messages', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-api-key': apiKey,
                'anthropic-version': '2023-06-01'
            },
            body: JSON.stringify({
                model: model.id,
                system: model.sysPrompt,
                messages: [
                    {
                        role: 'user',
                        content: prompt
                    }
                ],
                max_tokens: 1024
            })
        });

        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(`API request failed: ${errorData.error?.message || response.statusText}`);
        }

        const data = await response.json();
        progress.stop();
        return data.content[0].text;

    } catch (error) {
        console.error('Error calling 3rd party Rest API:', error.message);
        progress.stop();
    }
}

module.exports = { askClaude, tryAskClaude };